#include <mpi.h>
#include <iostream>
#include <cstdlib>
#include <string>
using namespace std;
int main(int argc, char **argv)
{
	MPI_Init(&argc, &argv);
	MPI_Request request;
	MPI_Status status;
	int rank, TAG = 0;	
	const int BUFFSIZE = 100;
	char message[BUFFSIZE], *buff;			
	int buff_size = 1;		
	buff = (char*) malloc(BUFFSIZE + MPI_BSEND_OVERHEAD);
	MPI_Buffer_attach(buff, BUFFSIZE + MPI_BSEND_OVERHEAD);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);
	if (rank == 0)
	{				
		strcpy(message, "a sea of troubles");			
		MPI_Ibsend(&message, BUFFSIZE, MPI_CHAR, 1, TAG, MPI_COMM_WORLD,&request);	
		MPI_Wait(&request,&status);
	}
	if (rank == 1)
	{					
		MPI_Irecv(&message, BUFFSIZE, MPI_CHAR, 0, TAG, MPI_COMM_WORLD, &request);
		MPI_Wait(&request,&status);
		cout << "Process - " << rank << "   " << "Povidomlennya - " << message << endl;
		MPI_Ibsend(&message, BUFFSIZE, MPI_CHAR, 2, TAG, MPI_COMM_WORLD,&request);	
		///MPI_Wait(&request,&status);
	}
	if (rank == 2)
	{	
		MPI_Irecv(&message, BUFFSIZE, MPI_CHAR, 1, TAG, MPI_COMM_WORLD, &request);
		MPI_Wait(&request,&status);
		cout << "Process - " << rank << "   " << "Povidomlennya - " << message << endl;
		MPI_Ibsend(&message, BUFFSIZE, MPI_CHAR, 3, TAG, MPI_COMM_WORLD,&request);	
		///MPI_Wait(&request,&status);
	}
	if (rank == 3)
	{		
		MPI_Irecv(&message, BUFFSIZE, MPI_CHAR, 2, TAG, MPI_COMM_WORLD, &request);
		MPI_Wait(&request,&status);
		cout << "Process - " << rank << "   " << "Povidomlennya - " << message << endl;		
	}
	MPI_Buffer_detach(&buff, &buff_size);
	MPI_Finalize();
	return 0;
}
